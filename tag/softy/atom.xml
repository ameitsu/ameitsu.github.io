<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://ameitsu.github.io</id>
    <title>Cyberpark Nichome • Posts by &#34;softy&#34; tag</title>
    <link href="http://ameitsu.github.io" />
    <updated>2023-09-08T14:17:01.000Z</updated>
    <category term="Ameitsu Orchestra" />
    <category term="原创" />
    <category term="at STY" />
    <category term="学习" />
    <category term="STY的初三大事记" />
    <category term="多图杀猫" />
    <category term="高中牲STY" />
    <category term="非原创" />
    <category term="高中牲STY-番外" />
    <category term="铁路" />
    <category term="冷门铁路史系列" />
    <category term="重要页面" />
    <category term="游记" />
    <category term="Notorial" />
    <category term="SofTY" />
    <category term="Python" />
    <category term="站内页面" />
    <entry>
        <id>http://ameitsu.github.io/SofTY/Notorial/SofTY/Notorial/prompt-toolkit-print/</id>
        <title>Notorial vol.1|Prompt toolkit库第一集：打印文本</title>
        <link rel="alternate" href="http://ameitsu.github.io/SofTY/Notorial/SofTY/Notorial/prompt-toolkit-print/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;此为 &lt;code&gt;Prompt toolkit&lt;/code&gt;  系列的页面。本系列其他文章如下：&lt;br /&gt;
第一集：&lt;strong&gt;打印文本&lt;/strong&gt;&lt;br /&gt;
第二集：输入文本 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第三集：对话框 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第四集：进度条 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第五集：全屏程序制作 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第六集：拓展内容 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第七集：一些实例 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
 ova：有价值的内容与结束语 &lt;em&gt;未更新&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;在下文中，Prompt toolkit 简称为 PT。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;写在前面&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写在前面&#34;&gt;#&lt;/a&gt; 写在前面&lt;/h1&gt;
&lt;p&gt;Python 的第三方库 prompt_toolkit 用于打造交互式命令行。本系列主要参考它的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXRob24tcHJvbXB0LXRvb2xraXQucmVhZHRoZWRvY3MuaW8vZW4vc3RhYmxlL2luZGV4Lmh0bWw=&#34;&gt;官方文档&lt;/span&gt;。&lt;/p&gt;
&lt;h1 id=&#34;下载pt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载pt&#34;&gt;#&lt;/a&gt; 下载 PT&lt;/h1&gt;
&lt;p&gt;可以用 &lt;code&gt;pip&lt;/code&gt;  或者 &lt;code&gt;anaconda&lt;/code&gt; 。但是 STY 主要使用前者。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install prompt_toolkit&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;打印普通文本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打印普通文本&#34;&gt;#&lt;/a&gt; 打印普通文本&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Hello world&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/09/08/1.jpg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;br /&gt;
 &lt;code&gt;print_formatted_text()&lt;/code&gt;  可以用来打印普通文本。如果想以假乱真，可以酱紫：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Hello world&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;打印格式化文本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打印格式化文本&#34;&gt;#&lt;/a&gt; 打印格式化文本&lt;/h1&gt;
&lt;p&gt;打印格式化文本需要这三种方法之一：创建 HTML 对象、创建 ANSI 对象、创建 &lt;code&gt;(样式,文本)&lt;/code&gt;  元组或使用 &lt;code&gt;pygments&lt;/code&gt;  库。STY 主要使用 HTML，毕竟已经学过了。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HTML&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;b&gt;This is bold&amp;lt;/b&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;i&gt;This is italic&amp;lt;/i&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;u&gt;This is underlined&amp;lt;/u&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/09/08/2.jpg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;实际上，这里的 &lt;code&gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;  标签没有被渲染成斜体，现在这大概率是个未解之谜。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;使用 HTML 对象时，需要先 import 到程序中。这样一来，就可以直接使用 HTML 标签了。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;skyblue&gt;This is sky blue&amp;lt;/skyblue&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;seagreen&gt;This is sea green&amp;lt;/seagreen&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;violet&gt;This is violet&amp;lt;/violet&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/09/08/3.jpg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;br /&gt;
 也可以用颜色标签设置背景色。&lt;br /&gt;
为了更好编辑格式信息，可以将格式内容在一个字典中编写：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HTML&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;styles &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Style&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;style &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;from_dict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;aaa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#ff0066&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;bbb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#44ff00 italic&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;aaa&gt;Hello&amp;lt;/aaa&gt; &amp;lt;bbb&gt;world&amp;lt;/bbb&gt;!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; style&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;style&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/09/08/4.jpg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;在上一个实例中，像 &lt;code&gt;&amp;lt;aaa&amp;gt;&amp;lt;/aaa&amp;gt;&lt;/code&gt;  的标签是自定义的。在 PT 中，可以使用自定义的标签，前提是和样式字典匹配。&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;formatted_text &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FormattedText&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; FormattedText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#ff0066&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#44ff00 italic&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;World&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;和 HTML 很像的方法是样式元组。此方法的大致内容与 HTML 对象类似，不再赘述。&lt;/p&gt;
&lt;p&gt;一个有用的函数是 &lt;code&gt;to_formatted_text()&lt;/code&gt; 。它可以使输入符合格式化文本的要求：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;formatted_text &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; to_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; HTML&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; prompt_toolkit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_formatted_text&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;html &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; HTML&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;aaa&gt;Hello&amp;lt;/aaa&gt; &amp;lt;bbb&gt;world&amp;lt;/bbb&gt;!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; to_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;html&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; style&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;class:my_html bg:#00ff00 italic&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;print_formatted_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Notorial" />
        <category term="SofTY" />
        <updated>2023-09-08T14:17:01.000Z</updated>
    </entry>
    <entry>
        <id>http://ameitsu.github.io/SofTY/Notorial/SofTY/Notorial/index/</id>
        <title>Notorial系列介绍与索引</title>
        <link rel="alternate" href="http://ameitsu.github.io/SofTY/Notorial/SofTY/Notorial/index/"/>
        <content type="html">&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;此页面待补充 o (T ヘ To)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;STY 经过深思熟虑后认为原先的 SofTY 系列的 “有趣程度” 不够，原因是其中的调侃成分与真正的技术部分掺杂在一起，而且涉及的技术难度不大。于是，SofTY 系列将拆分为 &lt;code&gt;SofTY-STorY&lt;/code&gt;  和 &lt;code&gt;Notorial&lt;/code&gt;  子系列，其中前者是即为原 SofTY 系列。现特别说明后者的主要内容并列出索引。&lt;/p&gt;
&lt;h1 id=&#34;notorial是个什么东西&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#notorial是个什么东西&#34;&gt;#&lt;/a&gt; Notorial 是个什么东西？&lt;/h1&gt;
&lt;p&gt;Notorial 是 note 和 tutorial 的派生词。这个子系列中是 STY 学习某种技术时的笔记，但同时也可起到教程的作用，所以才有这个命名。&lt;/p&gt;
&lt;h1 id=&#34;notorial现在有哪些内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#notorial现在有哪些内容&#34;&gt;#&lt;/a&gt; Notorial 现在有哪些内容？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Prompt-toolkit（一个 python 命令行库）&lt;br /&gt;
第一集：打印文本 &lt;a href=&#34;https://ameitsu.github.io/SofTY/Notorial/SofTY/Notorial/prompt-toolkit-print/&#34;&gt;前往&lt;/a&gt;&lt;br /&gt;
关于普通文本和格式化文本的输出。&lt;br /&gt;
第二集：输入文本 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
一些与输入文本有关的功能，如多行编辑、底部工具栏、自动补全等。&lt;br /&gt;
第三集：对话框 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第四集：进度条 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第五集：全屏程序制作 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第六集：拓展内容 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
第七集：一些实例 &lt;em&gt;未更新&lt;/em&gt;&lt;br /&gt;
 ova：有价值的内容与结束语 &lt;em&gt;未更新&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Notorial" />
        <category term="SofTY" />
        <category term="站内页面" />
        <updated>2023-09-07T15:33:55.000Z</updated>
    </entry>
    <entry>
        <id>http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E7%A7%91%E6%8A%80%E4%B8%8E%E4%B8%80%E6%A8%A1/</id>
        <title>SofTYvol.3|科技与一模</title>
        <link rel="alternate" href="http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E7%A7%91%E6%8A%80%E4%B8%8E%E4%B8%80%E6%A8%A1/"/>
        <content type="html">&lt;p&gt;啊，今天是 4 月 30 号，2023 年 4 月的最后一天。就在 40 个小时之前&lt;ins&gt;举世瞩目的&lt;/ins&gt; 2023 年朝阳区初三一模结束了。SofTY 作为本站的编程 / 数学专栏真的有必要从数学压轴题里找点整活的灵感什么的。&lt;/p&gt;
&lt;p&gt;所以嘛，本篇的主题 —— 用&lt;ins&gt;科技和人工智慧&lt;/ins&gt;攻克 16 题 (2) 和 28 题 (3)&lt;/p&gt;
&lt;p&gt;注意哦，是人工 &lt;strong&gt;智慧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;16题2问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16题2问&#34;&gt;#&lt;/a&gt; 16 题 (2) 问&lt;/h1&gt;
&lt;p&gt;先上题目&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;一个 33 人的旅游团到一家酒店住宿，酒店的客房只剩下 4 间一人间和若干间三人间，价格为一人间每晚￥100，三人间每晚￥130。而且男性只能和男性住、女性只能和女性住，同时没住满的三人间也按￥130 计算。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（2）这个旅游团租住了 3 间一人间，而且有 19 名男性，每晚的住宿费最低是￥_________。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好的我们来翻译一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有 19 男和 14 女&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一人间￥100，三人间￥130&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一人间 3 个，三人间无限&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;住不满三人间也得付全部的￥130&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正如 STY 在愚人节那天发的&lt;a href=&#34;https://ameitsu.github.io/2023/04/01/SofTY%20vol-1/&#34;&gt; SofTY vol.1 | 又一个狠活的诞生&lt;/a&gt;中提到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;&lt;font size = 6&gt;&lt;i&gt;…但问题是Python不是准JK…&lt;/i&gt; &lt;/font&gt;&lt;/center&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;她根本不知道怎么做这个题，只能硬枚举。（她管这个叫遍历）&lt;/p&gt;
&lt;p&gt;以免大家蒙在鼓里，以下的代码其实全是 STY 敲的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; math&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;answer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#备选答案列表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Program&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    male &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#记录男性的人数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    female &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#记录女性的人数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    single_room_price &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#记录单人间价格&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    triple_room_price &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;130&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#记录三人间价格&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#开始循环。这里的 4 是因为 range () 函数的最后一个参数不包含在范围内&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        male_single_rooms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;token comment&#34;&gt;#给男性分配单人间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        female_single_rooms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;i &lt;span class=&#34;token comment&#34;&gt;#给女性分配单人间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        male_triple_people &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; male&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;male_single_rooms &lt;span class=&#34;token comment&#34;&gt;#求出有多少男性需要住三人间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        female_triple_people &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; female&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;female_single_rooms &lt;span class=&#34;token comment&#34;&gt;#求出有多少女性需要住三人间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        male_triple_rooms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ceil&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;male_triple_people&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#求出男性需要的三人间数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        female_triple_rooms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ceil&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;female_triple_people&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#求出女性需要的三人间数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;# 注：ceil () 函数可以向上取整，例如 ceil (1.2) 的结果为 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        price &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; male_triple_rooms&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;triple_room_price &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; male_single_rooms&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;single_room_price&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;female_single_rooms&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;single_room_price&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;female_triple_rooms&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;triple_room_price &lt;span class=&#34;token comment&#34;&gt;#求总价&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        answer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;price&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 把结果添加到备选答案列表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;最低价格为&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;answer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;元&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Program&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#运行程序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;最低价格为1600元
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;okay 胜利结束。&lt;/p&gt;
&lt;p&gt;有人就问了，很明显我们没办法把电脑带到考场里，那该咋整捏？&lt;/p&gt;
&lt;p&gt;简单。对于人类来说，核心逻辑就是不花冤枉钱，或者说是都住满。主要是把 3 个单人间合理分配到男性和女性，使两边剩下的人数都是 3 的倍数。所以最省钱的方式是男性 1 间单人间、6 间三人间，女性 2 间单人间、4 间三人间。&lt;/p&gt;
&lt;h1 id=&#34;28题3问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#28题3问&#34;&gt;#&lt;/a&gt; 28 题 (3) 问&lt;/h1&gt;
&lt;p&gt;先上题目&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;28&#34;&gt;
&lt;li&gt;在平面直角坐标系 xOy 中，对于点 P，C，Q（点 P 与点 C 不重合），给出如下定义：若∠PCQ = 90°，且 CQ/CP = 1/k，则称点 Q 为点 P 关于点 C 的‘k 关联点’. 已知 A（3,0）B（0,3√3），⊙O 的半径为 r.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(2). 点 P 是线段 AB 上的的任意一点，点 C 为线段 OB 上任意一点（不与点 B 重合）. 当 r = 3√21 时，⊙O 上不存在点 P 关于点 C 的‘k 关联点‘，直接写出 k 的取值范围:________.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据这个什么关联点的定义，能大致画一个这样的草图。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;本部分的电子作图为 2023 年 8 月 31 日添加，仅为原始过程的电子版，3 个月以后的 STY 不对此部分文字或图片内容负责&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/08/31/1.jpg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;啊你问为什么非得往上画那个关联点点 N？因为往上画的 k 值更小。&lt;/p&gt;
&lt;p&gt;然后再作 &lt;code&gt;ND⊥y&lt;/code&gt; ，作 &lt;code&gt;PF⊥y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;诶！这不是 &lt;code&gt;三垂直模型&lt;/code&gt; 的相似嘛！于是可以设 &lt;code&gt;DC=a&lt;/code&gt; 、 &lt;code&gt;ND=b&lt;/code&gt; 、 &lt;code&gt;FP=ak&lt;/code&gt; 、 &lt;code&gt;CF=bk&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://cdnjson.com/images/2023/08/31/2.jpg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;br /&gt;
 再连一下 &lt;code&gt;NF&lt;/code&gt; ，这下就清楚了：终极目标是找到最小的 k，使 &lt;code&gt;NF&lt;/code&gt; =3√21。为了找最小的 k，a 和 b 都应该取最大值，因此 ak 和 bk 都要是最大值。依据题目要求，ak 最大是 3，bk 最大是 3√3。&lt;br /&gt;
&lt;img data-src=&#34;https://cdnjson.com/images/2023/08/31/3.jpg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;br /&gt;
 所以接下来就是在 &lt;code&gt;Rt∆DNF&lt;/code&gt;  中求一下就行。（很明显跳了亿点步骤）&lt;br /&gt;
&lt;img data-src=&#34;https://cdnjson.com/images/2023/08/31/-2023-08-31-113123.jpg&#34; alt=&#34;-2023-08-31-113123.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdnjson.com/images/2023/08/31/4.jpg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;虽然解有两个，但这里是线段！线段的长度不可能有负数，所以只能取 k = √3/3，即 k 的最小值为√3/3。&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgs.ovh/i/2023/08/31/64f01a6e0f7a4.png&#34; alt=&#34;真正的.png&#34; /&gt;&lt;br /&gt;
 再加上点 C 不与点 B 重合，说明 bk 取不到 3√3，所以最终的答案为 &lt;code&gt;k ≥ √3/3 &lt;/code&gt; ，结束。&lt;/p&gt;
&lt;p&gt;你看吧，确实用了不少  &lt;em&gt;&lt;strong&gt;人工智慧&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;h1 id=&#34;免责声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#免责声明&#34;&gt;#&lt;/a&gt; 免责声明&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;这个玩意不是什么答案过程，请您自己写。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有答案 STY 都对过标答了，但是有些步骤纯属现场重写，不排除出点什么错的可能性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="原创" />
        <category term="学习" />
        <category term="SofTY" />
        <category term="Python" />
        <updated>2023-04-28T15:10:57.000Z</updated>
    </entry>
    <entry>
        <id>http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E5%87%91%E6%B4%BB%E8%83%BD%E7%94%A8%E5%B0%8F%E7%88%AC%E8%99%AB/</id>
        <title>SofTY vol.2|凑活能用小爬虫</title>
        <link rel="alternate" href="http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E5%87%91%E6%B4%BB%E8%83%BD%E7%94%A8%E5%B0%8F%E7%88%AC%E8%99%AB/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/04/15/i7gSdZ.png&#34; alt=&#34;i7gSdZ.png&#34; /&gt;&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
 在开发中，我们时不时就发现自己要从某网站里扣出点有用的信息 &lt;s&gt;（比如 cosplay 套图和一堆地狱笑话）&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;额，暴露了…… 但是确实我们会用到爬虫，对吧？&lt;/p&gt;
&lt;p&gt;可是吧…… 爬虫的一个显著的特点是代码会稍稍多一点（当然是 Python 啦），导致有些时候我们会懒得为了一个简简单单的小目的而专门造一个爬虫。&lt;/p&gt;
&lt;p&gt;额…… 这又是 STY 的问题，可是爬虫的格式相对还是很固定的，所以咱开启正题&lt;/p&gt;
&lt;p&gt;
&lt;center&gt;&lt;font size = 10&gt;如何快速造一个凑合能用的简单小爬虫&lt;/font&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;h1 id=&#34;step-1-爬虫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step-1-爬虫&#34;&gt;#&lt;/a&gt; STEP 1 - “爬” 虫&lt;/h1&gt;
&lt;p&gt;某非著名编程爱好者曾说过：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;爬虫要自己爬到互联网上。&lt;/p&gt;
&lt;p&gt;—— 浅野ナツキ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以我们第一步要让这个 Python 文件能&lt;ins&gt;访问网站&lt;/ins&gt;。&lt;/p&gt;
&lt;p&gt;为了让它能访问网站，我们需要一个 &lt;code&gt;requests&lt;/code&gt;  模块啊！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import requests

headers = &amp;#123;&#39;useragent&#39;:&#39;xxxxxxxxxx&#39;&amp;#125;
url = &#39;https://ameitsu.github.io&#39;
res = requests.get(url=url,headers=headers)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第 3 行里的 headers 很神奇 —— 它是一个&lt;ins&gt;小区门禁卡&lt;/ins&gt;一样的东西。&lt;/p&gt;
&lt;p&gt;从设计目的上来说，useragent 是服务器判断访问文件的是人还是爬虫的防护措施，重点在于反爬虫。但是这也是它最大的问题：光天化日之下的爬虫能防住，&lt;ins&gt;套了个马甲&lt;/ins&gt;的爬虫就不行了&lt;/p&gt;
&lt;p&gt;只要 headers 部分换上一个货真价实的，从浏览器里 copy 的 useragent，服务器就不知道这到底是爬虫还是人了。（妈耶，STY 小区门口的门禁系统比这个严密了不知多少倍）&lt;/p&gt;
&lt;p&gt;如果你懒得去查自己浏览器的 useragent，那不如试试 &lt;code&gt;fake_useragent&lt;/code&gt;  模块，可以生成一个以假乱真的 header&lt;/p&gt;
&lt;p&gt;第 5 行里的 &lt;code&gt;res.get()&lt;/code&gt;  是本部分的核心科技。 &lt;code&gt;url&lt;/code&gt;  变量是将要访问的网址，有了网址和 headers &lt;code&gt;res.get()&lt;/code&gt;  就能假扮人类访问目标网页了。&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/04/15/i7goqF.png&#34; alt=&#34;i7goqF.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;step-2-处理战利品&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step-2-处理战利品&#34;&gt;#&lt;/a&gt; STEP 2 - 处理战利品&lt;/h1&gt;
&lt;p&gt;人类上网会直接找到关键信息，然后&lt;span class=&#34;kbd&#34;&gt; Crtl&lt;/span&gt;+&lt;span class=&#34;kbd&#34;&gt;C&lt;/span&gt;, 相当于信息的查看，筛选和利用一步就完成了。但是吧爬虫它不长脑子，得分几步做。&lt;/p&gt;
&lt;h2 id=&#34;a处理html文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#a处理html文件&#34;&gt;#&lt;/a&gt; a. 处理.html 文件&lt;/h2&gt;
&lt;p&gt;爬虫的网络模块访问网址后只会把网页的 html 文档 copy 下来。真正分析出信息还得在本地进行。&lt;/p&gt;
&lt;p&gt;所以我们需要的是一个 &lt;code&gt;BeautifulSoup&lt;/code&gt;  啊！把网页的 html 扣下来后像这样整就能正常地把 html 转换成方便解析的亚子。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;headers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;useragent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxxxxxxxxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://ameitsu.github.io&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;soup &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;BeautifulSoup&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lxml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;soup&lt;/code&gt;  在这里就是能用来解析的 html 字符串。根据 STY 目前的经验，这个变量叫 &amp;quot;soup&amp;quot; 的原因纯粹是&lt;ins&gt;这个模块叫 &amp;quot;BeautifulSoup&amp;quot;&lt;/ins&gt;……&lt;/p&gt;
&lt;h2 id=&#34;b找标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#b找标签&#34;&gt;#&lt;/a&gt; b. 找标签&lt;/h2&gt;
&lt;p&gt;BeautifulSoup 的大杀器是 &lt;code&gt;.findall()&lt;/code&gt; , 可以让你一下就通过 html 相关标签的规律直接匹配标签。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;contents &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; soup&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;_class &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上纯属示例，具体该匹配的的属性和值得看真实的需要。&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/04/15/i7gSdZ.png&#34; alt=&#34;i7gSdZ.png&#34; /&gt;&lt;br /&gt;
 最后输出的是一个列表类型的变量，看起来不好康，所以……&lt;/p&gt;
&lt;h1 id=&#34;step-3-输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#step-3-输出&#34;&gt;#&lt;/a&gt; STEP 3 - 输出&lt;/h1&gt;
&lt;p&gt;…… 就用循环的方式打印一下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; content &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; contents&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;但是！如果需要记录信息的话还是写入到一个文件里更安全。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;result.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encoding &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; content &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; contents&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;就酱。现在你有一个简单粗暴凑合能用的小爬虫了&lt;/p&gt;
&lt;p&gt;大概的代码是这样：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;headers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;useragent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxxxxxxxxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://www.example.com&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;soup &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;BeautifulSoup&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lxml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;contents &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; soup&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;_class &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;result.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encoding &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; content &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; contents&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;啊？你问怎么抓包下载视频？BeautifulSoup 模块还有什么神奇操作？requests 模块还能玩出什么花？&lt;/p&gt;
&lt;p&gt;那 STY 只能说……&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/04/15/i7NB8U.jpeg&#34; alt=&#34;i7NB8U.jpeg&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h1&gt;
&lt;p&gt;中考一模快到了，我向孔子许愿。&lt;/p&gt;
&lt;p&gt;我祈福说让他保佑我 7 科满分，孔子说不行，只能三科。&lt;/p&gt;
&lt;p&gt;我说好的，语言学科、科学学科、素养学科。&lt;/p&gt;
&lt;p&gt;孔子说不行，只能两科。&lt;/p&gt;
&lt;p&gt;我说好的，文科、理科。&lt;/p&gt;
&lt;p&gt;孔子说不行，只能一科。&lt;/p&gt;
&lt;p&gt;我说可以。&lt;/p&gt;
&lt;p&gt;孔子一脸茫然地看着我，问：‘哪一科？’&lt;/p&gt;
&lt;p&gt;我说：‘每一科’&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;向名人许愿 &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;并不&lt;/span&gt; 能提高您的一模成绩&lt;/p&gt;
&lt;/div&gt;
</content>
        <category term="原创" />
        <category term="SofTY" />
        <category term="Python" />
        <updated>2023-04-14T14:25:47.000Z</updated>
    </entry>
    <entry>
        <id>http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E4%BB%A3%E7%BB%BC%E8%AE%A1%E7%AE%97%E5%99%A8/</id>
        <title>SofTY vol.1|代综计算器</title>
        <link rel="alternate" href="http://ameitsu.github.io/SofTY/SofTY-STorY/SofTY/SofTY-STorY/%E4%BB%A3%E7%BB%BC%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/04/01/iHV0Ny.jpeg&#34; alt=&#34;iHV0Ny.jpeg&#34; /&gt;&lt;br /&gt;
 最近的代综题好烦，先去只有&lt;ins&gt;半扇门&lt;/ins&gt;的学校厕所哭一会儿（太夸张了⑧）&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/04/01/i2zgHN.jpeg&#34; alt=&#34;i2zgHN.jpeg&#34; title=&#34;以防万一你没见过代数综合是什么&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/04/01/iHVk43.jpeg&#34; alt=&#34;iHVk43.jpeg&#34; title=&#34;给人的感觉……&#34; /&gt;&lt;/p&gt;
&lt;p&gt;好的我哭完了，来说一说这次的狠活。它是 ——&lt;/p&gt;
&lt;p&gt;
&lt;center&gt;&lt;font size = 10&gt;代综计算器&lt;/font&gt;&lt;/center&gt;

&lt;/p&gt;
&lt;p&gt;根据 STY 的技术力，代综计算器将采用 Python 编写&lt;/p&gt;
&lt;p&gt;大概包括这些功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带入数据计算函数值&lt;/li&gt;
&lt;li&gt;求顶点和对称轴&lt;/li&gt;
&lt;li&gt;比较函数值大小（对称轴固定或为区间）&lt;/li&gt;
&lt;li&gt;含参坐标带入求值&lt;/li&gt;
&lt;li&gt;区间最值&lt;/li&gt;
&lt;li&gt;……&lt;br /&gt;
 同时还会有这些附带的小功能：&lt;/li&gt;
&lt;li&gt;化简二次根式&lt;/li&gt;
&lt;li&gt;编过程&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;ins&gt;饼画得很好&lt;/ins&gt;，然后压力来到了 STY 头上（笑）&lt;/p&gt;
&lt;p&gt;今天是愚人节，但是下面关于这个狠活的进度那可是非常准确滴：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅带入数据计算函数值&lt;/li&gt;
&lt;li&gt;✅求顶点和对称轴&lt;/li&gt;
&lt;li&gt;✅比较函数值大小（对称轴固定或为区间）&lt;/li&gt;
&lt;li&gt;❌含参坐标带入求值&lt;/li&gt;
&lt;li&gt;❌区间最值&lt;/li&gt;
&lt;li&gt;✅ 化简二次根式&lt;/li&gt;
&lt;li&gt;❌ 编过程&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;至今，也只有这些功能&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;里面带数进去算、求顶点和对称轴和比较函数值大小纯粹是按照常规方法实现，但是我整出来的&lt;ins&gt;数据和字母分离&lt;/ins&gt;的逻辑我自己觉滴很赞：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mx² &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; 2nx &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数a的数据：&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数a的字母：m&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数b的数据：&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数b的字母：n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数c的数据：&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样一来在带数计算和含参式子计算时候逻辑也非常清楚了：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;未知数x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p（常数）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算时：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算后参数a的数据：&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;² &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算后参数a的字母：&lt;span class=&#34;token string&#34;&gt;&#39;m&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;p²&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算后参数b的数据：&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;计算后参数b的单位：&lt;span class=&#34;token string&#34;&gt;&#39;n&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;p&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;参数c不变，略过&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;答案输出：y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mp² &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; 2np &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这一段也是整个代综计算器的&lt;ins&gt;核心科技&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;但是吧整个项目目前我认为最 NB 的是化简二次根式的小算法（？？？）。里面有一个我在上操时候顿悟出来的小逻辑。&lt;/p&gt;
&lt;p&gt;
&lt;center&gt;&lt;font size = 9&gt;逆 向 开 方&lt;/font&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;p&gt;正常情况下，初中生朋友们化简二次根式的方法是酱紫的：将被开方数拆成一个完全平方数乘另一个整数，将拆出来的完全平方数开方后移到根号外面，并且不能使根号下的整数能被再次拆分。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/04/01/i2uy2H.png&#34; alt=&#34;i2uy2H.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这种方法确实可以，在 Python 里可以枚举出 m，再乘 2 次方，接着用 a/m² 求出 n 并判断 n 是否为整数，从而挑出正确答案。&lt;/p&gt;
&lt;p&gt;但问题是 Python 不是准 JK，她没法一下知道哪个 m 最合适，于是就有了这种情况（以对 32 开方为例）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;  executing file.py
1√32
2√8
4√2

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;没错，前几个答案都是错的，只有最后一个是对的。&lt;br /&gt;
所以我们要&lt;strong&gt;倒着来&lt;/strong&gt;！逆向开方时，n 从小往大取，那么在所有符合要求的 m 和 n 中，第一个冒出来的组合的 n 值会是所有符合要求的 n 中最小的。换句话说，第一个算出来的就是&lt;strong&gt;最简二次根式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;再加上在一些恰到好处的地方加 &lt;code&gt;break&lt;/code&gt; ，就能实现算出正确答案后立刻跳出 &lt;code&gt;while&lt;/code&gt;  循环。&lt;/p&gt;
&lt;p&gt;来都来了，那就把正在施工的开方代码贴出来⑧：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; math&lt;span class=&#34;token comment&#34;&gt;#需要 math 模块的 math.sqrt () 和 math.trunk ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;answerlist &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#记答案用的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ExtractionObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;base&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#就是个正常的类定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; base &lt;span class=&#34;token comment&#34;&gt;#base 就是要开方的底数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Extraction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        resultlist &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 开方的步骤量都会存在这里（第一项是最简二次根式的被开方数，第二项是最简二次根式前面的整数，第三项是任何情况下都会添加的原被开方数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#先开个方试试&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            test_trunked &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;trunc&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#抹零算法，比以前不用 math 模块时用的先乘 10 再除 10 好多了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; test &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; test_trunked &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;#print (&#39; 对 &amp;#123;0&amp;#125; 的开方结果为  &amp;#123;1&amp;#125;&#39;.format (str (self.base),str (int (math.sqrt (self.base)))))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;#整个 if 逻辑判断一点用都没有，但是删了就得改后面所有的东西，还是留着吧&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    test2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;test2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;trunc&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;test2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        resultlist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        resultlist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;test2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            resultlist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resultlist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 答案列表有三项时说明被开方数能被化简&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; resultlist&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; resultlist&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            answer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;#123;0&amp;#125;√&amp;#123;1&amp;#125;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            answerlist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;answer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            answer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;√&amp;#123;0&amp;#125;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;base&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            answerlist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;answer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;就酱。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/04/01/iHVCd5.png&#34; alt=&#34;iHVCd5.png&#34; title=&#34;图文无关，但是真的好好笑啊23333&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后，毕竟今天是愚人节，怎么着也得参与一下吧！但是我拒绝。&lt;/p&gt;
&lt;p&gt;但是浅野千华宇宙要进行大规模扩充了！暑假一开始就更。除了浅野双子以外还有 Scotia・Priestly, Arakansas・Yuena, 夜雨明等一堆曾经只在草稿纸上出现的人物。&lt;/p&gt;
</content>
        <category term="原创" />
        <category term="SofTY" />
        <category term="Python" />
        <updated>2023-04-01T04:34:47.000Z</updated>
    </entry>
</feed>
